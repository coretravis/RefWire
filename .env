# RefWire API Configuration
# ---------------------------
# APIKEY: Your unique authentication key for accessing the API
# USEAPIKEYSECURITY: Enable API key validation for secured endpoints (recommended: true)
# AZUREBLOBSTORAGECONNECTIONSTRING: Connection string for Azure Blob Storage 
#   - For local development, use "UseDevelopmentStorage=true" with Azure Storage Emulator
#   - For production, use your actual Azure Storage connection string
REFWIRE__APIKEY="ThisIsTheApiKey"
REFWIRE__USEAPIKEYSECURITY=true
REFWIRE__AZUREBLOBSTORAGECONNECTIONSTRING="UseDevelopmentStorage=true"

# Rate Limiting Configuration
# --------------------------
# Controls request throttling to prevent abuse and ensure service stability
# ENABLED: Turn rate limiting on/off
# PERMITLIMIT: Maximum number of requests allowed within the time window
# WINDOW__SECONDS: Time window for rate limiting in seconds
# QUEUEPROCESSINGORDER: How queued requests are processed (0=unspecified, 1=FIFO, 2=LIFO)
# QUEUELIMIT: Maximum number of requests to queue when rate limit is reached (0=no queue)
# REJECTIONSTATUSCODE: HTTP status code returned when rate limit is exceeded
REFWIRE__RATELIMITING__ENABLED=true
REFWIRE__RATELIMITING__PERMITLIMIT=100
REFWIRE__RATELIMITING__WINDOW__SECONDS=60
REFWIRE__RATELIMITING__QUEUEPROCESSINGORDER=1
REFWIRE__RATELIMITING__QUEUELIMIT=100
REFWIRE__RATELIMITING__REJECTIONSTATUSCODE=429

# Persistence Configuration
# ------------------------
# Controls data storage options
# USEAZURE: When true, uses Azure storage; when false, uses local file system
# DATASETSDIRECTORY: Directory for storing datasets when using local storage
# BACKUPSDIRECTORY: Directory for storing backups when using local storage
# APIKEYSDIRECTORY: Directory for storing API keys when using local storage
REFWIRE__PERSISTENCE__USEAZURE=false
REFWIRE__PERSISTENCE__DATASETSDIRECTORY="datasets"
REFWIRE__PERSISTENCE__BACKUPSDIRECTORY="backups"
REFWIRE__PERSISTENCE__APIKEYSDIRECTORY="apikeys"

# Orchestration Configuration
# --------------------------
# Controls distributed application coordination and resilience
# CONTAINERNAME: Name of the blob container used for orchestration
# CONTROLBLOBNAME: Name of the blob used to store application instance information
# POLLINGINTERVALSECONDS: How often to check for orchestration updates
# USEORCHESTRATION: Enable/disable distributed orchestration features
# CIRCUITBREAKERFAILURETHRESHOLD: Number of failures before circuit breaker opens
# CIRCUITBREAKERRESETTIMEOUT: Seconds to wait before attempting to close circuit breaker
# MAXRETRYATTEMPTS: Maximum number of retry attempts for failed operations
# RETRYDELAYS: Comma-separated list of delays (in seconds) between retry attempts
# LEASEDURATION: Duration in seconds for blob leases in leader election
REFWIRE__ORCHESTRATION__CONTAINERNAME="orchestration"
REFWIRE__ORCHESTRATION__CONTROLBLOBNAME="appinstances.json"
REFWIRE__ORCHESTRATION__POLLINGINTERVALSECONDS=30
REFWIRE__ORCHESTRATION__USEORCHESTRATION=false
REFWIRE__ORCHESTRATION__CIRCUITBREAKERFAILURETHRESHOLD=5
REFWIRE__ORCHESTRATION__CIRCUITBREAKERRESETTIMEOUT=120
REFWIRE__ORCHESTRATION__MAXRETRYATTEMPTS=10
REFWIRE__ORCHESTRATION__RETRYDELAYS="1,2,5,10,30"
REFWIRE__ORCHESTRATION__LEASEDURATION=10

# CORS Configuration
# ----------------
# Cross-Origin Resource Sharing settings for browser security
# ALLOWEDORIGINS: Origins allowed to access the API
#   - Use "*" for development only
#   - For production, specify exact origins (e.g., "https://myapp.com,https://admin.myapp.com")
# ALLOWEDMETHODS: HTTP methods that can be used when accessing the API
# ALLOWEDHEADERS: HTTP headers that can be included in requests to the API
REFWIRE__CORS__ALLOWEDORIGINS="*"
REFWIRE__CORS__ALLOWEDMETHODS="POST,GET,PUT,DELETE,PATCH"
REFWIRE__CORS__ALLOWEDHEADERS="X-Api-Key,Content-Type,Accept,Authorization"

# Environment
# ----------
# ASPNETCORE__ENVIRONMENT: Application environment
#   - "Development": Enables developer-friendly features like detailed error pages
#   - "Production": Optimizes for security and performance (use for live deployments)
#   - "Staging": For pre-production testing
ASPNETCORE__ENVIRONMENT="Development"

# Logging Configuration
# -------------------
# LOGLEVEL: Minimum level of events to capture
#   - Options: Trace, Debug, Information, Warning, Error, Critical, None
#   - "Information" is recommended for most scenarios
#   - Use "Debug" or "Trace" for troubleshooting
LOGGING__LOGLEVEL="Information"